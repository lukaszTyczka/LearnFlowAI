name: Build and Test

on:
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Run ESLint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: "22.x" # Or specify another version if needed

      - name: Run ESLint
        uses: ./.github/actions/run-lint

  unit-test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: "22.x"

      - name: Run Unit Tests
        uses: ./.github/actions/run-unit-tests

  e2e-test:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    environment: Integration # Assuming this environment holds the necessary secrets
    needs: lint

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: "22.x"

      - name: Run E2E Tests
        uses: ./.github/actions/run-e2e-tests
        with:
          public_supabase_url: ${{ secrets.PUBLIC_SUPABASE_URL }}
          public_supabase_key: ${{ secrets.PUBLIC_SUPABASE_KEY }}
          openrouter_api_key: ${{ secrets.OPENROUTER_API_KEY }}
          e2e_username_id: ${{ secrets.E2E_USERNAME_ID }}
          e2e_login: ${{ secrets.E2E_LOGIN }}
          e2e_password: ${{ secrets.E2E_PASSWORD }}

  # Add back the status comment job for PRs
  status-comment:
    name: Post Status Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-test, e2e-test] # Depends on all checks
    if: always() # Always run this job to report status, even if dependencies fail
    permissions:
      pull-requests: write # Permission to write comments

    steps:
      - name: Post Status Comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const needsContext = ${{ toJson(needs) }};
            let body = '';
            let all_succeeded = true;

            // Check status of each needed job
            for (const jobName of Object.keys(needsContext)) {
              const job = needsContext[jobName];
              if (job.result === 'failure' || job.result === 'cancelled') {
                body += `❌ ${jobName} failed\n`;
                all_succeeded = false;
              } else if (job.result === 'skipped') {
                body += `⏭️ ${jobName} skipped\n`;
                all_succeeded = false; // Treat skipped as not fully successful
              } else if (job.result === 'success') {
                body += `✅ ${jobName} passed\n`;
              }
            }

            if (all_succeeded) {
              body = '✅ All checks passed!\n\n' + body;
            } else {
              body = '❌ Some checks failed. Please review the logs.\n\n' + body;
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
