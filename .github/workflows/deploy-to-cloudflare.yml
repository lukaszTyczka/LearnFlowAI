name: Deploy to Cloudflare

on:
  push:
    branches: [main]

permissions:
  contents: read
  deployments: write # Required for Cloudflare Pages deployment status

jobs:
  # Re-run checks on main before deploying
  lint:
    name: Run ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node
      - name: Run ESLint
        uses: ./.github/actions/run-lint

  unit-test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint # Run after lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node
      - name: Run Unit Tests
        uses: ./.github/actions/run-unit-tests

  e2e-test:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    environment: Integration # Needs the same secrets as the test workflow
    needs: lint # Run after lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node
      - name: Run E2E Tests
        uses: ./.github/actions/run-e2e-tests
        with:
          # Pass secrets via `with` to match the composite action's inputs
          public_supabase_url: ${{ secrets.PUBLIC_SUPABASE_URL }}
          public_supabase_key: ${{ secrets.PUBLIC_SUPABASE_KEY }}
          openrouter_api_key: ${{ secrets.OPENROUTER_API_KEY }}
          e2e_username_id: ${{ secrets.E2E_USERNAME_ID }}
          e2e_login: ${{ secrets.E2E_LOGIN }}
          e2e_password: ${{ secrets.E2E_PASSWORD }}

  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: [lint, unit-test, e2e-test] # Only run if all tests pass
    environment:
      name: Production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and Install Dependencies
        uses: ./.github/actions/setup-node

      - name: Build Astro Project
        run: npm run build
        env:
          PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
          PUBLIC_SUPABASE_KEY: ${{ secrets.PUBLIC_SUPABASE_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}

      - name: Publish to Cloudflare Pages
        id: publish # Give the step an ID to reference its outputs
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_KEY }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Use the command input for Pages deployment
          command: pages deploy ./dist --project-name=learnflowai # Replace project name and directory if needed
          # Optional: Enable GitHub Deployments integration
          # gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          # Optional: Wrangler automatically picks up commit hash/message from GitHub context
          # commitDirty: true # Keep if needed, but often not necessary with CI builds
          # commitHash: ${{ github.sha }}
          # commitMessage: ${{ github.event.head_commit.message }}
